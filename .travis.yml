language: objective-c
 
# Log build system information (illegal instruction errors are fickle)
# Get Cabal
# Trigger creation of ~/.cabal/config by running a cabal command
# Remove the cabal config containing $ncpus a la readme
# Get LLVM 3.0
# Add to the PATH
# Try compiling the hello world example with the baseline x64-class GHC
before_install:
  - pwd
  - sw_vers
  - brew install ghc cabal-install
  - cabal update
  - cat ~/.cabal/config
  - "sed -i '' '/jobs: $ncpus/d' ~/.cabal/config"
  - cat ~/.cabal/config
  - echo -e "\nPATH=`pwd`:"'$PATH' >> ~/.profile
  - cat ~/.profile
  - PATH=`pwd`:$PATH
  - echo $PATH
  - ghc --version
  - cabal -V
  - curl -O http://llvm.org/releases/3.0/clang+llvm-3.0-x86_64-apple-darwin11.tar.gz
  - tar xvf clang+llvm-3.0-x86_64-apple-darwin11.tar.gz
  - mv clang+llvm-3.0-x86_64-apple-darwin11 /usr/local/clang-3.0
  - rm clang+llvm-3.0-x86_64-apple-darwin11.tar.gz
  - ghc -v .travis/helloworld.hs

# Due to PATH alterations the preceding ./ is in theory unnecessary.
install: installGHCiOS.sh

# Try compiling a hello world Haskell file
# to see if ghc-ios is working.
script: ghc-ios -v .travis/helloworld.hs
